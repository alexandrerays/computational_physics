
<!-- saved from url=(0052)http://www.icmc.usp.br/pessoas/mello/trabalho05.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>Questões Relativas ao Trabalho 05</title>
	
</head>

<body>
<b>Questões Relativas ao Trabalho 05</b><br><br>

<hr>

1) Na descrição do Trabalho 05, está escrito "Após essa parte o arquivo deve ser lido byte a byte, no formato binário. Isso porque o arquivo tem o cabeçalho ASCII e o conteúdo binário." É realmente necessário fazer isso byte a byte? Digo isso porque no T4, assim como nesse, eu já possuo a quantidade de bytes que serão lidos (altura * largura na linha 3 do pgm), e acredito eu, que seja mais eficiente alocar toda a memória e ler todo o conteúdo de uma só vez, no caso da parte binária, assim como fiz no T4, do que fazer isso byte a byte.<br><br>

Resp: É apenas força de expressão. Claro que pode (e é realmente melhor) ler tudo de uma vez e armazenar na heap tendo sido feito apenas um malloc.<br><br>

<hr>

2) Na descrição do trabalho há um exemplo logo na primeira página que considera uma imagem com 800 pixels de largura e 600 de altura. Fiquei com dúvidas pois o trabalho diz que a imagem seria quadrada, não?<br><br>

Resp: Esse é apenas um exemplo que infelizmente ficou com 800 por 600. Na verdade sempre passaremos imagens quadradas para vocês via SSP, tal como 200 por 200, 100 por 100, etc.<br><br>

<hr>

3) A tarefa 3 deve ser feita considerando a imagem inicial ou a imagem após processamento pelo filtro de Threshold?<br><br>

Resp: A imagem após passar pelo filtro de Threshold.<br><br>

<hr>

4) Como faço para ver os valores dos bytes do arquivo binário ou texto?<br><br>

Resp: Você pode usar um programa chamado hexdump que está disponível na Máquina Virtual que montei para vocês. Podem também utilizar qualquer sistema Linux que já vem com hexdump. Ele funciona assim:<br><br>

[mello@netuno Downloads]$ hexdump -C test.pgm <br>
00000000  50 35 0a 23 20 43 52 45  41 54 4f 52 3a 20 47 49  |P5.# CREATOR: GI|<br>
00000010  4d 50 20 50 4e 4d 20 46  69 6c 74 65 72 20 56 65  |MP PNM Filter Ve|<br>
00000020  72 73 69 6f 6e 20 31 2e  31 0a 32 30 20 32 30 0a  |rsion 1.1.20 20.|<br>
00000030  32 35 35 0a ff ff 00 00  00 00 00 00 00 00 00 00  |255.............|<br>
00000040  00 00 00 00 00 ff ff ff  ff ff 00 00 00 00 00 00  |................|<br>
00000050  00 00 00 00 00 00 00 00  00 ff ff ff ff ff 00 00  |................|<br><br>

Observe que ele apresenta o valor do caracter P como 50 em hexadecimal (primeiro caracter do arquivo). Observe que a letra A tem valor 41 em hexadecimal e 65 em decimal (observe acima).<br><br>

<hr>

5) Posso abrir o arquivo como binário e manipulá-lo somente como binário?<br><br>

Resp: Pode sim. A princípio todo arquivo pode ser manipulado como binário, mas nem todo pode ser manipulado como texto. Há funções que são mais indicadas para manipular arquivos binários tais como fread e fwrite. Há outras que são mais indicadas para arquivos texto, tais como fprintf e fscanf. Porém pode-se utilizar todas elas em qualquer tipo de arquivo, a principal questão é que você deve saber o que de fato ocorre no arquivo em termos dos bytes armazenados. Por exemplo, seja:<br><br>

int a = 52;<br><br>

Suponha que o gravei em um arquivo binário usando <b>fwrite(&amp;a, sizeof(int), 1, fp);</b>, logo serão armazenados 4 bytes no arquivo texto (considerando que o sizeof(int) em minha máquina é de 4 bytes.<br><br>

Suponha que o gravei em um arquivo texto usando <b>fprintf(fp, "%d", a);</b>, logo serão armazenados 2 caracteres no arquivo texto.<br><br>

<hr>

6) Ainda não entendo bem o formato binário e o formato textual de arquivos. Poderia explicar melhor?<br><br>

Resp: Primeiramente sugiro que leiam o FAQ do Trabalho 4. Em seguida, observe que todo arquivo binário salva exatamente o que está na memória RAM. Por exemplo, suponha que eu tenha salvo um inteiro (que tem 4 bytes na memória RAM) para o arquivo binário. Nesse caso, 4 bytes serão armazenados no arquivo binário. Inclusive na mesma ordem que esses bytes ficam na RAM. Por exemplo, o byte menos significativo é o primeiro dos quatro e o mais significativo é o último dos quatro, tanto na RAM quanto no arquivo binário. Por outro lado, se eu gravo como texto esse mesmo inteiro, por exemplo <b>fprintf(fp_texto, "%d", inteiro);</b>, serão armazenados os dígitos do número. Se o número inteiro for igual a 52, então dois caracteres serão gravados no arquivo texto, o primeiro com o código ASCII do 5 e o segundo com o código ASCII do 2.<br><br>

<hr>

7) Olhando a questão 5 ainda fiquei com uma dúvida. O que ocorre se eu abrir um arquivo como binário, mas usar fprintf para gravar?<br><br>

Resp: Veja o exemplo abaixo:<br><br>

#include &lt;stdlib.h&gt;<br>
#include &lt;stdio.h&gt;<br>
<br>
int main(int argc, char *argv[]) {<br>
        int a = 52;<br>
        FILE *fp = fopen("test.dat", "wb+");<br>
        fprintf(fp, "%d", a);<br>
        fclose(fp);<br>
        return 0;<br>
}<br><br>

O arquivo foi aberto como binário. O fprintf irá imprimir o texto 52 dentro desse arquivo, ou seja, irá ocupar 2 bytes. Essa função fprintf até pode ser usada para manipular arquivo binário, porém irá escrever dentro dele como texto. Então eu poderia usar essa função por exemplo para gerar o cabeçalho do arquivo PGM do trabalho mesmo se tivesse aberto ele como binário? Sim, pois quando você usar fprintf ele gravará na forma de texto. Teste o exemplo acima.<br><br>

<hr>

8) Outro arquivo para testarem <a href="http://www.icmc.usp.br/pessoas/mello/tux.pgm">AQUI</a><br><br>

<hr>

9) Na tarefa 1 do Trabalho 05, os pixels devem assumir o valor do pixel máximo. Esse pixel máximo é o valor máximo da escala de cinza do arquivo, ou sempre será 255 (o máximo suportado por um byte)?<br><br>

Resp: Sim, terá o valor máximo da escala de cinza.<br><br>

<hr>

10) Como as sub-regiões estão escritas no arquivo? Estão linearmente?<br><br>

Resp: As subimagens/subregiões NÃO estão escritas no arquivo de forma explícita. O arquivo possui formato conforme descrito no enunciado, dividido em linhas e colunas. É o seu programa quem deverá encontrar essa divisão, independente do tamanho da imagem, para poder contar o numero de zeros que recaem em cada subimagem após a operação de Thresholding,<br><br>

<hr>

11) Na tarefa 3 foi dado o exemplo de uma imagem com as dimensão 8x8 pixels, assim ela terá 64pixels no total. Para formar 16 subimagens eu devo separa-las em intervalos com 4 pixels cada(64/16=4)? Neste caso eu separaria nos seguintes intervalos: imagem 1: [do pixel de indice 0 ao pixel 3]; imagem2: [do pixel de indice 4 ao pixel 7] ... imagem16 [do pixel de indice 60 ao pixel 63], isto está correto?<br><br>

Resp: Acredito que não tenha compreendido corretamente. Segue uma imagem com um exemplo para o caso de 8x8 pixels.<br>

<img src="./Questões Relativas ao Trabalho 05_files/exemplo.jpg"><br><br>

<hr>

12) Para realizarmos a tarefa 3 do trabalho 5, devemos dividir a imagem em sub-imagens quadradas. A minha dúvida diz respeito a como essas sub-imagens estão dispostas no arquivo, já que o enxergamos como um conjunto de bytes dispostos de forma sequencial, geralmente armazenados em um vetor. <br><br>

Resp: Se a imagem tem 8 linhas por 8 colunas, por exemplo, então os primeiros 8 bytes da imagem são relativos à primeira linha da imagem. Os 8 bytes seguintes relativos à segunda linha da imagem. E assim sucessivamente.<br><br>

<hr>

13) Feito pelo Roni César de Castro. Pedi (Mateus Riva) permissão para por no FAQ, pois estou recebendo muitas dúvidas que essa imagem e texto respondem.<br><br>

"Eu nao sei se vai ajudar, mas olhando a questão 11 do FAQ eu montei essa tabela da imagem para me ajudar a fazer esse trabalho. Essa é uma imagem 8x8(Total de 64 pixels), cada cor representa uma das 16 imagens (independente se for a imagem tiver dimensões 4x4, 8x8, 16x16, 32x32, 64x64,... você sempre terá que formar 16 sub-imagens). Na imagem cada numero dentro da primeira tabela representa o índice do meu vetor que armazena todos os pixels. e as duas ultimas tabelas representam o local onde eu tenho que ficar procurando os 0s para cada imagem."<br><br>

<img src="./Questões Relativas ao Trabalho 05_files/imagem.jpg"><br><br>

<hr>



</body></html>